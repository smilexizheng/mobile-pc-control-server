// import sherpa_onnx from 'sherpa-onnx-node'
// // import upath from "upath";
//
// // const ASRService = () => {}
//
// // eslint-disable-next-line @typescript-eslint/explicit-function-return-type
// function createOfflineTts() {
//   const config = {
//     model: {
//       kokoro: {
//         model:
//           'D:\\IdeaProjects\\win-control-serve-electron\\models\\kokoro-multi-lang-v1_1\\model.onnx',
//         voices:
//           'D:\\IdeaProjects\\win-control-serve-electron\\models\\kokoro-multi-lang-v1_1\\voices.bin',
//         tokens:
//           'D:\\IdeaProjects\\win-control-serve-electron\\models\\kokoro-multi-lang-v1_1\\tokens.txt',
//         dataDir:
//           'D:\\IdeaProjects\\win-control-serve-electron\\models\\kokoro-multi-lang-v1_1\\espeak-ng-data',
//         dictDir:
//           'D:\\IdeaProjects\\win-control-serve-electron\\models\\kokoro-multi-lang-v1_1\\dict',
//         lexicon:
//           'D:\\IdeaProjects\\win-control-serve-electron\\models\\kokoro-multi-lang-v1_1\\lexicon-us-en.txt,D:\\IdeaProjects\\win-control-serve-electron\\models\\kokoro-multi-lang-v1_1\\lexicon-zh.txt'
//       },
//       debug: true,
//       numThreads: 1,
//       provider: 'cpu'
//     },
//     maxNumSentences: 1
//   }
//   return new sherpa_onnx.OfflineTts(config)
// }
//
// let ttsService = createOfflineTts()
// // eslint-disable-next-line @typescript-eslint/explicit-function-return-type
// const tts = (text, filePath) => {
//   text =
//     '中英文语音合成测试。This is generated by next generation Kaldi using Kokoro without Misaki. 你觉得中英文说的如何呢？'
//   const start = Date.now()
//   const audio = ttsService.generate({ text: text, sid: 48, speed: 1.0 })
//   const stop = Date.now()
//   const elapsed_seconds = (stop - start) / 1000
//   const duration = audio.samples.length / audio.sampleRate
//   const real_time_factor = elapsed_seconds / duration
//   console.log('Wave duration', duration.toFixed(3), 'seconds')
//   console.log('Elapsed', elapsed_seconds.toFixed(3), 'seconds')
//   console.log(
//     `RTF = ${elapsed_seconds.toFixed(3)}/${duration.toFixed(3)} =`,
//     real_time_factor.toFixed(3)
//   )
//
//   sherpa_onnx.writeWave(filePath, { samples: audio.samples, sampleRate: audio.sampleRate })
// }
//
// export { tts }

import ChildProcessManager from './child_process_manager'
import OCRService from './ocr'

const InitAsrTts = (): void => {
  const ocrService = new OCRService({ lang: 'zhCN' })

  ocrService.ocr('D:\\IdeaProjects\\win-control-serve-electron\\resources\\ocr\\test.png')

  // 麦克风流式语音监听
  const asrProcess = new ChildProcessManager(
    'D:\\IdeaProjects\\win-control-serve-electron\\src\\main\\asr-tts\\asr_streaming_paraformer.mjs'
  )
  asrProcess.start()
  asrProcess.send({ logPath: 'logs' })
  asrProcess.on('started', (e, d) => {
    console.log('asr接收到消息', e, d)
  })
  global.asrProcess = asrProcess

  const ttsProcess = new ChildProcessManager(
    'D:\\IdeaProjects\\win-control-serve-electron\\src\\main\\asr-tts\\tts_non_streaming_kokoro_zh_en.mjs'
  )
  ttsProcess.start()
  ttsProcess.send({ cmd: 'tts', text: '这是中文，this is a dog,中英切换，效果如何？' })
  global.ttsProcess = ttsProcess
}

export { InitAsrTts }
